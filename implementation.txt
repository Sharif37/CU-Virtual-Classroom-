\section{Implementation}\label{sec:imp}
We implement our project using Android Studio.In this project we use java language for backend design and XML language for frontend design.
here show database helper class for creating table,XML code for frontend and java class file for backend. 
%Listing~\ref{list:sql} Database helper class. 

\begin{lstlisting}[caption={Database helper class}, label=list:sql, captionpos=b,
           backgroundcolor=\color{white},
           language=SQL,
           breaklines=true,
           frame=single,
           showspaces=false,
           basicstyle=\ttfamily,
           numbers=left,
           numberstyle=\tiny,
           rulecolor=\color{red},
           keywordstyle=\color{blue},
           commentstyle=\color{gray}
        ]

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.widget.Toast;

import androidx.annotation.Nullable;


public class DatabaseHelper extends SQLiteOpenHelper {

    public static final int version=4 ;
    private Context context;
    //table user
    public static final int version=8 ;
    public static final String databaseName="Classroom";
    public static final String tableName="user";
    public static final String col1="ID" ;
@@ -20,17 +23,35 @@ public class DatabaseHelper extends SQLiteOpenHelper {
    public static final String col4="PassWord" ;


// table 2
// table sessions


    public static final int version1=1 ;
    public static final String tableName2="sessions";

    public static final String col11="ID" ;
    public static final String col22="session_id" ;
    public static final String col33="login_time" ;
    public static final long   session_timeout=30*60*60 ;


    //table classroom
    public static final String tableClassroom ="Class";
    public static final String  class_Id ="classID";
    public static final String  Class_Name ="ClassName";
    public static final String  class_description ="Description";
    public static final String  class_adminID ="AdminID";
    public static final String  class_key ="key";



    // table admin
    public static final String tableAdmin="Admin" ;
    public static final String admin_Id="AdminID" ;

    public static final String admin_Name="Name" ;
    public static final String admin_Email="Email" ;


    String CreateTable="CREATE TABLE " + tableName+ "("
            + col1 + " INTEGER PRIMARY KEY ,"
            + col2 + " TEXT,"
@@ -44,8 +65,19 @@ public class DatabaseHelper extends SQLiteOpenHelper {
            + col33 + " INTEGER "
            + ")" ;


    String Create_Class_table="CREATE TABLE "+ tableClassroom + "(" + class_Id + " Text primary key ,"+
             Class_Name + " Text ," + class_description + " Text ," + class_adminID +" Text ," + class_key +"  Text  unique , "+ " FOREIGN Key "+ "(" + class_adminID +")"+
            " REFERENCES  "+ tableName + "("+ col1 + ")" +")" ;


    String Create_Admin_table="CREATE TABLE "+ tableAdmin+ "(" + admin_Id + " Text primary key ,"+
         admin_Name + " Text ," + admin_Email + " Text "+ ")" ;

      DatabaseHelper(@Nullable Context context) {
        super(context, databaseName, null, version);

          super(context, databaseName, null, version);
          this.context=context;
    }


@@ -54,13 +86,18 @@ public class DatabaseHelper extends SQLiteOpenHelper {
    public void onCreate(SQLiteDatabase db) {
        db.execSQL(CreateTable);
        db.execSQL(CreateTable2);
        db.execSQL(Create_Class_table);
        db.execSQL(Create_Admin_table);

    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("DROP TABLE IF EXISTS "+tableName);
        db.execSQL("DROP TABLE IF EXISTS "+tableName2);
        db.execSQL("DROP TABLE IF EXISTS "+tableClassroom);
        db.execSQL("DROP TABLE IF EXISTS "+tableAdmin);

        onCreate(db);

    }
@@ -127,9 +164,46 @@ public boolean checkUserNameAndPassword(String id,String password)
    }


    public void createClassroom(String  classId,String className,String classDescription, String adminId,String key)
    {

        SQLiteDatabase db = this.getWritableDatabase();

        //insert new session into database
        ContentValues values=new ContentValues();

        values.put(class_Id,classId);
        values.put(Class_Name,className);
        values.put(class_description,classDescription);
        values.put(class_adminID,adminId);
        values.put(class_key,key);



        long newRowId = db.insert(tableClassroom,null,values);

        if (newRowId == -1) {
            Toast.makeText( context, "Error saving class to database", Toast.LENGTH_SHORT).show();

        } else {
            Toast.makeText(context, "Class created successfully", Toast.LENGTH_SHORT).show();
             // Close the activity and return to the previous one
        }
    }

    public void createAdminrule(String  adminId,String adminName,String adminEmail)
    {
        SQLiteDatabase db=this.getWritableDatabase();

        //insert new session into database
        ContentValues values=new ContentValues();

        values.put(admin_Id,adminId);
        values.put(admin_Name,adminName);
        values.put(admin_Email,adminEmail);

        db.insert(tableAdmin,null,values);
    }
  

\end{lstlisting}
  \clearpage
%Listing~\ref{list:sql} XML code for frontend design. 

\begin{lstlisting}[caption={XML code}, label=list:sql, captionpos=b,
           backgroundcolor=\color{white},
           language=SQL,
           breaklines=true,
           frame=single,
           showspaces=false,
           basicstyle=\ttfamily,
           numbers=left,
           numberstyle=\tiny,
           rulecolor=\color{red},
           keywordstyle=\color{blue},
           commentstyle=\color{gray}
        ]

@@ -0,0 +1,5 @@
<vector android:height="24dp" android:tint="#FFFFFF"
    android:viewportHeight="24" android:viewportWidth="24"
    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
    <path android:fillColor="@android:color/white" android:pathData="M17,12h-5v5h5v-5zM16,1v2L8,3L8,1L6,1v2L5,3c-1.11,0 -1.99,0.9 -1.99,2L3,19c0,1.1 0.89,2 2,2h14c1.1,0 2,-0.9 2,-2L21,5c0,-1.1 -0.9,-2 -2,-2h-1L18,1h-2zM19,19L5,19L5,8h14v11z"/>
</vector>
        

\end{lstlisting}
  \clearpage
 % Listing~\ref{list:sql} java code for backend design.
\begin{lstlisting}[caption={java code}, label=list:sql, captionpos=b,
           backgroundcolor=\color{white},
           language=SQL,
           breaklines=true,
           frame=single,
           showspaces=false,
           basicstyle=\ttfamily,
           numbers=left,
           numberstyle=\tiny,
           rulecolor=\color{red},
           keywordstyle=\color{blue},
           commentstyle=\color{gray}
        ]  
        package com.example.cuvc;

import androidx.appcompat.app.AppCompatActivity;
import androidx.cardview.widget.CardView;
import androidx.drawerlayout.widget.DrawerLayout;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;


public class Home extends BaseActivity implements View.OnClickListener {

    private DrawerLayout drawerLayout;
    private CardView classRoomCardView,ResourceCardView,EventCardView,TransportCardView;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        // Find the DrawerLayout in the layout
        drawerLayout = findViewById(R.id.drawerLayout);
        classRoomCardView = findViewById(R.id.ClassroomCardview);
        ResourceCardView = findViewById(R.id.ResourceCardView);
        EventCardView= findViewById(R.id.EventCardView);
        TransportCardView = findViewById(R.id.TransportCardView);


        classRoomCardView.setOnClickListener(this);
        ResourceCardView.setOnClickListener(this);
        EventCardView.setOnClickListener(this);
        TransportCardView.setOnClickListener(this);


    }

    @Override
    protected int getLayoutResourceId() {
        return R.layout.activity_home;
    }

    @Override
    protected int getMenuResourceId() {
        return R.menu.refresh ;
    }


    @Override
    public void onClick(View v) {
           Intent intent ;
        switch(v.getId())
        {
            case R.id.ClassroomCardview:
                 intent = new Intent(Home.this, classroomActivity.class);
                startActivity(intent);
                break ;
            case R.id.ResourceCardView:
                 intent = new Intent(Home.this, ResourceActivity.class);
                startActivity(intent);
                break ;
            case R.id.EventCardView:
                intent = new Intent(Home.this, EventActivity.class);
                startActivity(intent);
                break ;
            case R.id.TransportCardView:
                intent = new Intent(Home.this, TransportActivity.class);
                startActivity(intent);

        }

    }
}
        

\end{lstlisting}

\clearpage
